var store = [{
        "title": "PLMN(Public land mobile network)",
        "excerpt":"PLMN(Public land mobile network), MCC,MNC   The ITU-T Recommendation E.212 defines mobile country codes (MCC) as well as mobile network codes (MNC).                  Country or Geographical Area       Network       MCC + MNC codes                       Korea (Rep. of)                                         KT / 5G test bed       450 02                         KT / IoT network       450 04                         SK Telecom  / 3G, 4G network       450 05                         LGU+ / 3G, 4G network       450 06                         KT Powertel / 3G network       450 07                         KT / 3G, 4G network       450 08                         SK Telecom / 3G, 4G network       450 11                         SK Telecom / IoT network       450 12              Mobile Network Codes (MNC) for the international identification plan    ","categories": ["cat m1"],
        "tags": ["MCC","MNC","PLMN"],
        "url": "/cat%20m1/PLMN-list/",
        "teaser": null
      },{
        "title": "BG96 GPS Example",
        "excerpt":"BG96 GPS Example   대부분의 Cat.M1 장치는 GPS(Global Positioning System)를 지원하고 있다. GPS는 범지구 위성 항법 시스템(GNSS, Global Navigation Satellite System)의 한 종류로, 대중적으로 활용되는 글로벌 위성 위치 확인 시스템이다.   Cat.M1 모듈 및 외장형 모뎀은 UART 인터페이스를 통해 활용하는 AT 명령어로 제어하는 것이 일반적인데, GPS 정보의 획득 기능도 AT 명령어를 이용하여 활성화 할 수 있고, 일반적으로 NMEA 기반의 포맷으로 출력된다.         Github - Arduino 기반으로 Cat.M1 GPS 활용하기    ","categories": ["cat m1"],
        "tags": ["BG96","GPS","NMEA"],
        "url": "/cat%20m1/bg96-gps-example/",
        "teaser": null
      },{
        "title": "LTE Release Cause",
        "excerpt":"Cause values for EPS mobility management   (A) Causes related to UE identification                  Cause code       Status       Description                       Cause #2       IMSI unknown in HSS       This EMM cause is sent to the UE if the UE is not known (registered) in the HSS or if the UE has packet only subscription. This EMM cause does not affect operation of the EPS service, although is may be used by an EMM procedure.                 Cause #3       Illegal UE       This EMM cause is sent to the UE when the network refuses service to the UE either because an identity of the UE is not acceptable to the network or because the UE does not pass the authentication check, i.e. the RES received from the UE is different from that generated by the network.                 Cause #6       Illegal ME       This EMM cause is sent to the UE if the ME used is not acceptable to the network, e.g. blacklisted.                 Cause #9       UE identity cannot be derived by the network.       This EMM cause is sent to the UE when the network cannot derive the UE’s identity from the GUTI/S-TMSI/P-TMSI and RAI e.g. no matching identity/context in the network or failure to validate the UE’s identity due to integrity check failure of the received message.                 Cause #10       Implicitly detached       This EMM cause is sent to the UE either if the network has implicitly detached the UE, e.g. after the implicit detach timer has expired, or if the EMM context data related to the subscription does not exist in the MME e.g. because of a MME restart, or because of a periodic tracking area update request routed to a new MME.           (B) Cause related to subscription options                  Cause code       Status       Description                       Cause #5       IMEI not accepted       This cause is sent to the UE if the network does not accept an attach procedure for emergency bearer services using an IMEI.                 Cause #7       EPS services not allowed       This EMM cause is sent to the UE when it is not allowed to operate EPS services.                 Cause #8       EPS services and non-EPS services not allowed       This EMM cause is sent to the UE when it is not allowed to operate either EPS or non-EPS services.                 Cause #11       PLMN not allowed       This EMM cause is sent to the UE if it requests service, or if the network initiates a detach request, in a PLMN where the UE, by subscription or due to operator determined barring, is not allowed to operate.                 Cause #12       Tracking area not allowed       This EMM cause is sent to the UE if it requests service, or if the network initiates a detach request, in a tracking area where the HPLMN determines that the UE, by subscription, is not allowed to operate.           Note  If EMM cause #12 is sent to a roaming subscriber the subscriber is denied service even if other PLMNs are available on which registration was possible.                  Cause code       Status       Description                       Cause #13       Roaming not allowed in this tracking area       This EMM cause is sent to an UE which requests service, or if the network initiates a detach request, in a tracking area of a PLMN which by subscription offers roaming to that UE but not in that tracking area.                 Cause #14       EPS services not allowed in this PLMN       This EMM cause is sent to the UE which requests service, or if the network initiates a detach request, in a PLMN which does not offer roaming for EPS services to that UE.           Note  Since only one list of forbidden PLMNs for packet services is maintained in the UE, then the “forbidden PLMNs for GPRS service” is the maintained list and the forbidden PLMNs for EPS service is equivalent to it.                  Cause code       Status       Description                       Cause #15       No suitable cells in tracking area       This EMM cause is sent to the UE if it requests service, or if the network initiates a detach request, in a tracking area where the UE, by subscription, is not allowed to operate, but when it should find another allowed tracking area or location area in the same PLMN or an equivalent PLMN.           Note  Cause #15 and cause #12 differ in the fact that cause #12 does not trigger the UE to search for another allowed tracking area on the same PLMN.                  Cause code       Status       Description                       Cause #25       Not authorized for this CSG       This EMM cause is sent to the UE if it requests access, or if the network initiates a detach request, in a CSG cell with CSG ID where the UE either has no subscription to operate or the UE’s subscription has expired and it should find another cell in the same PLMN or an equivalent PLMN.                 Cause #35       Requested service option not authorized in this PLMN       This EMM cause is sent to the UE if it requests in a PLMN a service option for which it is not authorized, e.g. if it attempts to attach for relay node operation in a PLMN with a USIM which does not belong to a relay node-specific subscription.                 Cause #40       No EPS bearer context activated       This EMM cause is sent to the UE, if during a tracking area updating procedure or a service request, the MME detects that there is no active EPS bearer context in the network.                 Cause #31       Redirection to 5GCN required       This EMM cause is sent to the UE if it requests service in a PLMN where the UE by operator policy, is not allowed in EPC and redirection to 5GCN is required.           (C) Causes related to PLMN specific network failures and congestion/authentication failures                  Cause code       Status       Description                       Cause #16       MSC temporarily not reachable       This EMM cause is sent to the UE if it requests a combined EPS attach or tracking area updating in a PLMN where the MSC is temporarily not reachable via the EPS part of the network.                 Cause #17       Network failure       This EMM cause is sent to the UE if the MME cannot service an UE generated request because of PLMN failures.                 Cause #18       CS domain not available       This EMM cause is sent to the UE if the MME cannot service an UE generated request because CS domain is not available and SMS in MME is not supported.                 Cause #19       ESM failure       This EMM cause is sent to the UE when there is a failure in the ESM message contained in the EMM message.                 Cause #20       MAC failure       This EMM cause is sent to the network if the USIM detects that the MAC in the AUTHENTICATION REQUEST message is not fresh (see 3GPP TS 33.401 [19]).                 Cause #21       Synch failure       This EMM cause is sent to the network if the USIM detects that the SQN in the AUTHENTICATION REQUEST message is out of range (see 3GPP TS 33.401 [19]).                 Cause #22       Congestion       This EMM cause is sent to the UE because of congestion in the network (e.g. no channel, facility busy/congested etc.).                 Cause #23       UE security capabilities mismatch       This EMM cause is sent to the network if the UE detects that the UE security capability does not match the one sent back by the network.                 Cause #24       Security mode rejected, unspecified       This EMM cause is sent to the network if the security mode command is rejected by the UE if the UE detects that the nonceUE does not match the one sent back by the network or for unspecified reasons.                 Cause #26       Non-EPS authentication unacceptable       This EMM cause is sent to the network in S1 mode if the “separation bit” in the AMF field of AUTN is set to 0 in the AUTHENTICATION REQUEST message (see 3GPP TS 33.401 [19]).                 Cause #39       CS service temporarily not available       This EMM cause is sent to the UE when the CS fallback or 1xCS fallback request cannot be served temporarily due to O&amp;M reasons or a mobile terminating CS fallback call is aborted by the network during call establishment (see 3GPP TS 29.118 [16A]).                 Cause #42       Severe network failure       This EMM cause is sent to the UE when the network has determined that the requested procedure cannot be completed successfully due to network failure. The failure is not expected to be temporary and repeated request is not likely to succeed in near future.           Cause values for EPS session management   (A) Causes related to nature of request                  Cause code       Status       Description                       Cause #8       Operator Determined Barring       This ESM cause is used by the network to indicate that the requested service was rejected by the MME due to Operator Determined Barring.                 Cause #26       Insufficient resources       This ESM cause is used by the UE or by the network to indicate that the requested service cannot be provided due to insufficient resources.                 Cause #27       Missing or unknown APN       This ESM cause is used by the network to indicate that the requested service was rejected by the external packet data network because the access point name was not included although required or if the access point name could not be resolved.                 Cause #28       Unknown PDN type       This ESM cause is used by the network to indicate that the requested service was rejected by the external packet data network because the PDN type could not be recognised.                 Cause #29       User authentication or authorization failed       This ESM cause is used by the network to indicate that the requested service was rejected by the external packet data network due to a failed user authentication or revoked by the external packet data network.                 Cause #30       Request rejected by Serving GW or PDN GW       This ESM cause is used by the network to indicate that the requested service or operation or the request for a resource was rejected by the Serving GW or PDN GW.                 Cause #31       Request rejected, unspecified       This ESM cause is used by the network or by the UE to indicate that the requested service or operation or the request for a resource was rejected due to unspecified reasons.                 Cause #32       Service option not supported       This ESM cause is used by the network when the UE requests a service which is not supported by the PLMN.                 Cause #33       Requested service option not subscribed       This ESM cause is sent when the UE requests a service option for which it has no subscription.                 Cause #34       Service option temporarily out of order       This ESM cause is sent when the network cannot service the request because of temporary outage of one or more functions required for supporting the service.                 Cause #35       PTI already in use       This ESM cause is used by the network to indicate that the PTI included by the UE is already in use by another active UE requested procedure for this UE.                 Cause #36       Regular deactivation       This ESM cause is used to indicate a regular UE or network initiated release of EPS bearer resources.                 Cause #37       EPS QoS not accepted       This ESM cause is used by the network if the new EPS QoS cannot be accepted that was indicated in the UE request.                 Cause #38       Network failure       This ESM cause is used by the network to indicate that the requested service was rejected due to an error situation in the network.                 Cause #39       Reactivation requested       This ESM cause is used by the network to request a PDN connection reactivation.                 Cause #41       Semantic error in the TFT operation.       This ESM cause is used by the network or the UE to indicate that the requested service was rejected due to a semantic error in the TFT operation included in the request.                 Cause #42       Syntactical error in the TFT operation.       This ESM cause is used by the network or the UE to indicate that the requested service was rejected due to a syntactical error in the TFT operation included in the request.                 Cause #43       Invalid EPS bearer identity       This ESM cause is used by the network or the UE to indicate that the EPS bearer identity value provided to it is not a valid value for the received message or the EPS bearer context identified by the linked EPS bearer identity IE in the request is not active.                 Cause #44       Semantic errors in packet filter(s)       This ESM cause is used by the network or the UE to indicate that the requested service was rejected due to one or more semantic errors in packet filter(s) of the TFT included in the request.                 Cause #45       Syntactical error in packet filter(s)       This ESM cause is used by the network or the UE to indicate that the requested service was rejected due to one or more syntactical errors in packet filter(s) of the TFT included in the request.                 Cause #47       PTI mismatch       This ESM cause is used by the UE to indicate that the PTI value which is included in the ESM message that the UE receives does not match a PTI in use.                 Cause #49       Last PDN disconnection not allowed       This ESM cause is used by the network, in case of EMM-REGISTERED without PDN connection is not supported by the UE or the MME, to indicate that the UE requested PDN disconnection procedure on the last remaining PDN connection is not allowed.                 Cause #50       PDN type IPv4 only allowed       This ESM cause is used by the network to indicate that only PDN type IPv4 is allowed for the requested PDN connectivity.                 Cause #51       PDN type IPv6 only allowed       This ESM cause is used by the network to indicate that only PDN type IPv6 is allowed for the requested PDN connectivity.                 Cause #52       single address bearers only allowed       This ESM cause is used by the network to indicate that the requested PDN connectivity is accepted with the restriction that only single IP version bearers are allowed.                 Cause #53       ESM information not received       This ESM cause is used by the network to indicate that the PDN connectivity procedure was rejected due to the ESM information was not received.                 Cause #54       PDN connection does not exist       This ESM cause is used by the network at handover from a non-3GPP access network to indicate that the MME does not have any information about the requested PDN connection.                 Cause #55       Multiple PDN connections for a given APN not allowed       This ESM cause is used by the network to indicate that the PDN connectivity procedure was rejected due to multiple PDN connections for a given APN are not allowed.                 Cause #56       Collision with network initiated request       This ESM cause is used by the network to indicate that the network has already initiated the activation, modification or deactivation of bearer resources which was requested by the UE.                 Cause #57       PDN type IPv4v6 only allowed       This ESM cause is used by the network to indicate that only PDN types IPv4, IPv6 or IPv4v6 are allowed for the requested PDN connectivity.                 Cause #58       PDN type non IP only allowed       This ESM cause is used by the network to indicate that only PDN type non IP is allowed for the requested PDN connectivity.                 Cause #59       Unsupported QCI value       This ESM cause is used by the network if the QCI indicated in the UE request cannot be supported.                 Cause #60       Bearer handling not supported       This ESM cause is used by the network to indicate that the procedure requested by the UE was rejected because the bearer handling is not supported.                 Cause #61       PDN type Ethernet only allowed       This ESM cause is used by the network to indicate that only PDN type Ethernet is allowed for the requested PDN connectivity.                 Cause #65       Maximum number of EPS bearers reached       This ESM cause is used by the network to indicate that the procedure requested by the UE was rejected as the network has reached the maximum number of simultaneously active EPS bearer contexts for the UE.                 Cause #66       Requested APN not supported in current RAT and PLMN combination       This ESM cause is used by the network to indicate that the procedure requested by the UE was rejected as the requested APN is not supported in the current RAT and PLMN.                 Cause #81       Invalid PTI value       This ESM cause is used by the network or UE to indicate that the PTI provided to it is unassigned or reserved.                 Cause #112       APN restriction value incompatible with active EPS bearer context.       This ESM cause is used by the network to indicate that the EPS bearer context(s) have an APN restriction value that is not allowed in combination with a currently active EPS bearer context. Restriction values are defined in 3GPP TS 23.060 [4].                 Cause #113       Multiple accesses to a PDN connection not allowed       This ESM cause is used by the network to indicate that multiple accesses to a PDN connection for NBIFOM is not allowed.           (B) Protocol errors (e.g., unknown message) class                  Cause code       Status       Description                       Cause #95       Semantically incorrect message       This ESM cause is used to report receipt of a message with semantically incorrect contents.                 Cause #96       Invalid mandatory information       This ESM cause indicates that the equipment sending this ESM cause has received a message with a non-semantical mandatory IE error.                 Cause #97       Message type non-existent or not implemented       This ESM cause indicates that the equipment sending this ESM cause has received a message with a message type it does not recognize either because this is a message not defined, or defined but not implemented by the equipment sending this ESM cause.                 Cause #98       Message type not compatible with protocol state       This ESM cause indicates that the equipment sending this ESM cause has received a message not compatible with the protocol state.                 Cause #99       Information element non-existent or not implemented       This ESM cause indicates that the equipment sending this ESM cause has received a message which includes information elements not recognized because the information element identifier is not defined or it is defined but not implemented by the equipment sending the ESM cause. However, the information element is not required to be present in the message in order for the equipment sending the ESM cause to process the message.                 Cause #100       Conditional IE error       This ESM cause indicates that the equipment sending this cause has received a message with conditional IE errors.                 Cause #101       Message not compatible with protocol state       This ESM cause indicates that a message has been received which is incompatible with the protocol state.                 Cause #111       Protocol error, unspecified       This ESM cause is used to report a protocol error event only when no other ESM cause in the protocol error class applies.               From Telecompedia  Release Causes    ","categories": ["cat m1"],
        "tags": ["LTE Reject","Reject code","Reject Cause"],
        "url": "/cat%20m1/LTE-Release-Cause/",
        "teaser": null
      },{
        "title": "Cat.M1 GPS 사용 예제",
        "excerpt":"LTE Cat M1용의 칩셋과 모듈들은 대부분 GPS/GLONASS 기능을 지원하고 있다.   Qualcomm MDM9206     Location : Satellite Systems Support: Beidou, Galileo, GLONASS, GPS   MDM9206    Altair ALT1250     Assisted GPS and GLONASS navigation systems are supported  ALT1250    우리넷 모뎀 GPS Example  // Serial 통신 확인 AT OK  // S/W Version 확인 (2019년 12월 1일 이후 버전인지 확인) AT$$SWVER $$SWVER: S430XX.020.01, Mar 24 2021 10:20:01  OK  // GPS 기능 출력 인터페이스 설정 AT$$GPSCONF=1,0,1000,252,1,6,0,0 $$GPSCONF:1,0,1000,252,1,6,0,0  OK  // GPS 기능 활성화 AT$$GPS OK $$GPS,,,,,,,,V,2,255,255,-28,0,0-0,0-0,0-0,0-0 $$GPS,,,,,,,,V,2,255,255,-28,0,0-0,0-0,0-0,0-0 $$GPS,,,,,,,,V,2,255,255,-49,16,10,-44,194-42,193-42,12-42 $$GPS,,,,,,,,V,2,255,255,-49,16,10,-44,194-42,193-42,12-42 $$GPS,,,,,,,,V,2,255,255,-49,16,10,-44,194-42,193-42,12-42 .............................. ..............................  //GPS 기능 비활성화 AT$$GPSSTOP OK   유블럭스 GNSS   이에 반해, 유블럭스 같은 모듈은 Qualcomm MDM920x를 사용하고 있지만, 별도의 GNSS 모듈을 사용하도록 가이드하고 있다.   ","categories": ["cat m1"],
        "tags": ["GPS","우리넷","유블럭스"],
        "url": "/cat%20m1/Cat-M1-GPS-example/",
        "teaser": null
      },{
        "title": "Cat.M1 사진 전송",
        "excerpt":"LTE Cat.M1의 경우 Sigfox, LoRa, NB-IoT 보다 최대 전송 속도가 비교적 높기 때문에 실시간 트래킹 서비스 또는 사진 전송와 같은 중용량 및 실시간 응용에 사용하기 적합하다.  아래 예제에서는 우리넷 의 Cat.M1 외장형 모뎀을 이용하여 사진 전송이 가능한지 확인하고 속도를 검증해보도록 하겠다.   ​  하드웨어 설정 - ​WD-N400S 외장형 모뎀 설정   우리넷의 Cat.M1 외장형 모뎀을 사용하기 위한 방법은 두 가지 방법이 있다.     UART 인터페이스를 통해 AT 커맨드로 외장형 모뎀을 제어하는 방법   RNDIS(Remote NDIS) 모드로 사용하는 방법   단, AT 커맨드를 이용하는 경우 UART 인터페이스(Baud Rate: 115200)를 사용하므로 Cat.M1 최대 전송 속도인 375kbps를 사용할 수 없으며, RNDIS 모드를 사용하면 Cat.M1 최대 전송 속도를 사용할 수 있다. 외장형 모뎀을 RNDIS 모드로 사용하기 위해서는 AT 커맨드로 ‘RNDISMODE=1’을 설정 후 재시작해야 한다.   AT$$SWVER $$SWVER: S130XX.037, Jul 24 2018 18:37:48  OK AT*RNDISMODE=1 OK   하드웨어 설정 - 라즈베리파이와 카메라  Cat M1 외장형 모뎀 설정이 끝나면, 아래와 같이 라즈베리파이, 카메라, Cat M1 외장형 모뎀 등을 연결한다.    동작 동영상   사진을 찍고 전송하는 동작 영상은 Youtube 동영상을 참고하면 된다.   LTE Cat.M1 속도   총 50번 테스트를 진행하였으며, 평균 데이터 전송률은 298.37bps 이었습니다. 통신사에서 공표한 Cat.M1 최고 전송 속도의 80~90% 수준에 육박하는 것을 확인할 수 있었다.   ​  ","categories": ["cat m1"],
        "tags": ["라즈베리파이","우리넷","사진","RNDIS","USB"],
        "url": "/cat%20m1/Cat-M1-send-photo/",
        "teaser": null
      },{
        "title": "우리넷 모뎀 FW 업그레이드",
        "excerpt":"펌웨어 버전 확인 방법  AT Command 사용포트로 (UART1) 연결하여 다음과 같은 명령어를 실행하면 됩니다. AT$$SWVER   펌웨어 다운로드     S430.XX.020.01_TD3S.zip: Download   S430.XX.023.01_TD3S.zip: Download   환경설정     Windows 10 (64-bit)   Qualcomm Driver:  Download   펌웨어 업데이트     Qualcomm Driver 설치 후, DP/DM 연결(UART연결이 아닌 USB RNDIS 연결, Interface B/D 사용시 Modem_USB Port 연결)   펌웨어 프로그램 다운로드 및 압축해제   WD-N400S 연결된 상태에서 exe 파일 (S430.XX.XXX.01_TD3S.exe) 실행   펌웨어 업데이트 후, 버전 확인   ","categories": ["cat m1"],
        "tags": ["우리넷"],
        "url": "/cat%20m1/woorinet-modem-fw-upgrade/",
        "teaser": null
      },{
        "title": "RNDIS",
        "excerpt":"RNDIS      The Remote Network Driver Interface Specification (RNDIS) is a Microsoft proprietary protocol used mostly on top of USB.[1] It provides a virtual Ethernet link to most versions of the Windows, Linux, and FreeBSD operating systems. Multiple revisions of a partial RNDIS specification are available from Microsoft, but Windows implementations have been observed to issue requests not included in that specification, and to have undocumented constraints.[2]   The protocol is tightly coupled to Microsoft’s programming interfaces and models, most notably the Network Driver Interface Specification (NDIS), which are alien to operating systems other than Windows. This complicates implementing RNDIS on non-Microsoft operating systems,[citation needed] but Linux,[3] FreeBSD,[4] NetBSD[5] and OpenBSD[6] implement RNDIS natively.   RNDIS Wikipedia    Windows RNDIS Diagram      Microsoft Overview of Remote NDIS (RNDIS)    우리넷 Cat M1 모듈 RNDIS 설정 방법   AT$$SWVER $$SWVER: S130XX.037, Jul 24 2018 18:37:48  OK  // WM-N400MSE RNDIS 모드 설정 AT*RNDISMODE=1 *RNDISMODE=1  OK  // RNDIS 모드 적용을 위해 모듈 재부팅 AT*SKT*RESET *SKT*RESET:1  OK   Windows에 RNDIS 추가된 모습     Windows RNDIS 통신 테스트     ","categories": ["cat m1"],
        "tags": ["라즈베리파이","우리넷","RNDIS","USB"],
        "url": "/cat%20m1/woorinet-modem-rndis/",
        "teaser": null
      },{
        "title": "BG96 개통 로그",
        "excerpt":"BG96 개통 로그   RDY  +CFUN: 1  APP RDY  +CPIN: READY  +QUSIM: 1  +QIND: SMS DONE  +CPIN: READY  +QUSIM: 1  +QIND: SMS DONE AT+QCDS +QCDS: \"SRV\",\"CAT-M\",45012,2500,13B***,R13,3,368,2058,-74,-99,-7,3,128,0,0,0  OK AT+CNUM +CNUM: ,\"0122750****\",129  OK   ","categories": ["cat m1"],
        "tags": ["BG96","개통 로그"],
        "url": "/cat%20m1/bg96-open-sim-log/",
        "teaser": null
      },{
        "title": "IoT 디바이스 인증서 업데이트",
        "excerpt":"IoT 디바이스의 인증서 만료 문제   Root CA 인증서 만료 문제     Expiring root certificates will cause devices like smart TVs and refrigerators to fail in the next few years, security researcher Scott Helme has warned.   Secure internet connections depend on the server presenting a valid certificate to the client, the most common problem being that the server certificate is out of date, easily fixed by the server admin. In order to validate the certificate, though, the client must have a trusted root certificate from the issuing authority, and this, says Helme, is a problem for devices that never get updated.    An Internet of Trouble lies ahead as root certificates begin to expire en masse, warns security researcher     디바이스 인증서 로테이션  위에 언급된 Root CA 인증서 만료 문제 외에도, IoT 디바이스의 인증서를 업데이트해야 하는 상항도 발생할 수 있다.   AWS IoT Deice Defender : 인증서 만료 감지  AWS IoT Core의 AWS IoT Device Defender에서는 계정 및 디바이스와 관련된 설정 및 정책에서 보안 조치가 구현되어 있는지 확인하고 있다. 이 기능 중에는 CA 및 디바이스의 인증서에 대한 해지 여부, 인증서 만료 여부, 활성화 상태, 손상 상태 등을 검사하고, 감지하는 기능을 제공하고 있다. 아래는 인증서 만료에 대한 기능에 대한 설명이다.      A CA certificate is expiring within 30 days or has expired.   This check appears as CA_CERTIFICATE_EXPIRING_CHECK in the CLI and API.   CA certificate expiring       A device certificate is expiring within 30 days or has expired.   This check appears as DEVICE_CERTIFICATE_EXPIRING_CHECK in the CLI and API.   Device certificate expiring    Azure Sphere Security Service : 인증서 관리를 포함한 토탈 IoT 보안 솔루션 제공  마이크로소프트는 인증서 유효성 검사는 물론이고, Azure Sphere라고 하는 IoT 토탈 보안 솔루션도 제공하고 있다. 이를 통해서, 인증서 업데이트를 포함한 모든 보안 서비스들을 제공받을 수 있다.     Every Azure Sphere device relies on the Trusted Root store, which is part of the Azure Sphere OS. The Trusted Root store contains a list of root certificates that are used to validate the identity of the Azure Sphere Security Service when the device connects for device authentication and attestation (DAA), over-the-air (OTA) update, or error reporting. These certificates are provided with the OS.   When daily attestation succeeds, the device receives two certificates: an update certificate and a customer certificate. The update certificate enables the device to connect to the Azure Sphere Update Service to get software updates and to upload error reports; it is not accessible to applications or through the command line. The customer certificate, sometimes called the DAA certificate, can be used by applications to connect to third-party services such wolfSSL that use transport layer security (TLS). This certificate is valid for 24 hours. Applications can retrieve it programmatically by calling the DeviceAuth_GetCertificatePath function.   Devices that connect to Azure-based services such as Azure IoT Hub, Azure IoT Central, and Azure IoT Edge must present their Azure Sphere tenant CA certificate to authenticate their Azure Sphere tenant. The azsphere ca-certificate download command in the CLI returns the tenant CA certificate for such uses.    Certificate use with Azure Sphere    해결책  IoT 디바이스의 인증서 만료 문제대 대한 가장 간단한 방법은 인증서 만료 기간을 수십년 이상으로 설정하는 방법이 있고, 클라우드와의 C2D 메시지 등을 이용해서, 인증서 페이로드 데이터를 디바이스에게 전송하는 방법도 있다.      “…There is no hard-rule to set the maximum expiration of your self-signed X509 certificate deployed to Azure IoT Hub. Nevertheless even if the certificate is long-lived, you need to account that it can expire and there needs to be a way to update the certificate on the device…”    “…I have created a test root CA cert with a validity of 100 years and uploaded it to IoTHub…”    Maximum ROOT_CA Expiration    당연한 결론이겠지만, IoT 디바이스의 인증서 관리에 대한 가장 좋은 방법은 디바이스의 주기적인 업데이트를 지원하는 일인 것 같다.     The best solution to this issue is ‘Updates’. There must be updated one way or the other. Being a software/device builder who works around public key infrastructure for secure communication, you need to consider the fact that not updating your Root CA will have a huge impact on your service. Even if you are working with legacy clients, your choice of CA will have a vast influence on them.    Expired Root Certificates: The Main Reason to Weaken IoT Devices   ","categories": ["cat m1"],
        "tags": ["인증서 만료","root ca","azure","aws"],
        "url": "/cat%20m1/iot-device-certificate-update/",
        "teaser": null
      },{
        "title": "PDP Conext 초기화",
        "excerpt":"PDP Context  PDP(Packet Data Protocol)는 GPRS(General Packet Radio Service) 망과 통신을 위해 외부 패킷 데이터망이 사용하는 네트워크 프로토콜이다.  IP가 GPRS에서 지원하는 PDP의 한 예이다.  단말과 네트워크 사이의 패킷 데이타 전송이 가능하게 하는 연결이 이루어지는데, 여기에 사용되는 정보를 PDP Context라고 한다. 즉, 외부 Packet Data Network로의 연결을 위한 여러가지 종류 정보의 집합 이라고 할수 있다.   보통 PDP를 Activation 하기 전에, 설정된 PDP 정보를 확인하거나 통신 사업자가 제공하는 정보를 입력해야 한다.   SK 텔레콤 Cat M1 PDP 정보   AT+CGDCONT? +CGDCONT: 1,\"IPV4V6\",\"\",\"0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0\",0,0,0,0 +CGDCONT: 2,\"IPV4V6\",\"lte-internet.sktelecom.com\",\"0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0\",0,0,0,0   PDP Context 초기화 (SK 텔레콤 Cat M1)   유심이나 모듈이 개통 이력이 있는 경우나 초기 개통에서 문제가 발생하는 경우에, 아래 처럼 PDP Context 초기화하고 재부팅을 하면 정상 개통이 이루어질 수 있다.  AT+CGDCONT=1,”IPV4V6” Ok  AT+CFUN=1,1 OK   Null APN   일부 글로벌심의 경우에 설정해야 하는 APN이 정확하지 않다면, APN을 Null로 설정하고 재부팅을 하면 정상 동작하는 경우도 있다. (Hologram SIM &amp; BG96)  AT+CGDCONT=1,”IP”, Ok  AT+CFUN=1,1 OK   ","categories": ["cat m1"],
        "tags": ["pdp context","개통 초기화","글로벌심"],
        "url": "/cat%20m1/pdp-context/",
        "teaser": null
      },{
        "title": "RTK",
        "excerpt":"RTK (Real-time kinematic positioning)      Real-time kinematic positioning (RTK) is the application of surveying to correct for common errors in current satellite navigation (GNSS) systems. It uses measurements of the phase of the signal’s carrier wave in addition to the information content of the signal and relies on a single reference station or interpolated virtual station to provide real-time corrections, providing up to centimetre-level accuracy (see DGPS).[1] With reference to GPS in particular, the system is commonly referred to as carrier-phase enhancement, or CPGPS.[2] It has applications in land survey, hydrographic survey, and in unmanned aerial vehicle navigation. RTK Wikipedia    네트워크 RTK     GNSS 네트워크 방식으로 계산한 RTK 보정신호인 네트워크 RTK 보정신호는 사용자가 위치한 지점의 인근에 배치된 다수의 기준국들로부터 RTK 보정신호를 수집한 후 이를 종합적으로 활용하여 사용자 위치에 적합한 RTK 보정신호를 계산하는 방식으로 생성됩니다. 여러 기준국에서 계산한 정보들을 활용하여 사용자 위치에 적합한 RTK 보정신호를 계산하기 때문에 일반적인 RTK에 비하여 보다 넓은 지역에 적용할 수 있는 보정신호를 생성할 수 있다는 장점을 가지고 있습니다.  서울특별시 네트워크 RTK 시스템       서울특별시 네트워크 RTK 서비스 : Link   ","categories": ["misc"],
        "tags": ["RTK"],
        "url": "/misc/RTK/",
        "teaser": null
      },{
        "title": "Cat M1 HTTP 예제",
        "excerpt":"Cat M1 HTTP 예제   AT*WHTTP=1,GET,reqbin.com/echo *WHTTP:HTTPS,GET,reqbin.com/echo,0,,,,,0,0,0,10  OK AT*WHTTP=3 OK *WHTTPR:START &lt;html&gt;&lt;head&gt;&lt;title&gt;ReqBin Echo&lt;/title&gt;&lt;meta name=\"description\" content=\"ReqBin Echo Interface\"&gt;&lt;meta charset=\"utf-8\"&gt;&lt;meta name=\"viewport\" content=\"width=device-width\"&gt;&lt;link rel=\"shortcut icon\" href=\"/static/favicon.ico\"&gt;&lt;style&gt;body {font-size: 1.5rem;} l i {margin: 0.3rem;} &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;ReqBin Echo&lt;/h1&gt; &lt;p&gt;Simple echo interface for HTTP methods.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;https://reqbin.com/echo/get/json&lt;/li&gt; &lt;li&gt;https://reqbin.com/echo/post/json&lt;/li&gt; &lt;li&gt;https://reqbin.com/echo/head/json&lt;/li&gt; &lt;li&gt;https:// reqbin.com/echo/get/xml&lt;/li&gt; &lt;li&gt;https://reqbin.com/echo/post/xml&lt;/li&gt; &lt;li&gt;https://reqbin.com/echo/post/form&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; *WHTTPR:COMPLETED    AT*WHTTP=1,POST,reqbin.com/echo/post/json *WHTTP:HTTPS,POST,reqbin.com/echo/post/json,0,,,,,0,0,0,10  OK AT*WHTTP=3 OK *WHTTPR:START {\"success\":\"true\"} *WHTTPR:COMPLETED    AT*WHTTP=1,POST,www.google.com *WHTTP:HTTPS,POST,www.google.com,0,,,,,0,0,0,10  OK AT*WHTTP=3 OK *WHTTPR:START &lt;!DOCTYPE html&gt; &lt;html lang=en&gt;   &lt;meta charset=utf-8&gt;   &lt;meta name=viewport content=\"initial-scale=1, minimum-scale=1, width=device-width\"&gt;   &lt;title&gt;Error 411 (Length Required)!!1&lt;/title&gt;   &lt;style&gt;     *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* &gt; body{background:url(//www.google.com/images/errors/robot.png) 10 0% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.g oogle.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0 % 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_ color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}   &lt;/style&gt;   &lt;a href=//www.google.com/&gt;&lt;span id=logo aria-label=Google&gt;&lt;/span&gt;&lt;/a&gt;   &lt;p&gt;&lt;b&gt;411.&lt;/b&gt; &lt;ins&gt;That’s an error.&lt;/ins&gt;   &lt;p&gt;POST requests require a &lt;code&gt;Content-length&lt;/code&gt; header.  &lt;ins&gt;That’s all we know.&lt;/ins&gt; *WHTTPR:COMPLETED      ","categories": ["cat m1"],
        "tags": ["우리넷","외장형 모뎀","http"],
        "url": "/cat%20m1/woorinet-modem-HTTP-example/",
        "teaser": null
      },{
        "title": "Cat M1 AWS IoT 예제",
        "excerpt":"Cat M1 AWS IoT 예제   AT*WFPUSH=/data/cacerts-aws.crt,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lUQm15Zno1bS9qQW81NHZCNGlrUG1salpieWpBTkJna3Foa2lHOXcwQkFRc0YKQURBNU1Rc3dDUVlEVlFRR0V3SlZVekV....................................................................................0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0= OK AT*WFPUSH=/data/clientcerts-aws.crt,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lVYlFpVzdQRmFzWXZWbFFLeG9yMGNLVCttWVBJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1RURkxNRWtHQTFVRUN3eENRVzF...................................................................................pRW82RGJEU2VBSW9KYVp4UEtCVU9jRDcrUXlyaGgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ== OK AT*WFPUSH=/data/clientkey-aws.key,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc0h1b1lHYVA3SXMvR0J2Q3B5Y2dyWEp6Y08zditONmUyYzhzZG9xbFFxL2NnRWNoCjI3eFJWRXYzT1Q2cS84cVlXZnB....................................................................................RqT0NDUEdVLzhFblMrS244ZG1RPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ== OK  AT*WMQTCFG=cacerts,/data/cacerts-aws.crt *WMQTCFG:cacerts,/data/cacerts-aws.crt   OK AT*WMQTCFG=clientcerts,/data/clientcerts-aws.crt *WMQTCFG:clientcerts,/data/clientcerts-aws.crt   OK AT*WMQTCFG=clientkey,/data/clientkey-aws.key *WMQTCFG:clientkey,/data/clientkey-aws.key   OK AT*WMQTCFG=endpoint,ssl://a3uz5t2azg1xdz-ats.iot.ap-northeast-2.amazonaws.com *WMQTCFG:endpoint,ssl://a3uz5t2azg1xdz-ats.iot.ap-northeast-2.amazonaws.com   OK AT*WMQTCFG=clientname,clientid-testid *WMQTCFG:clientname,clientid-testid   OK AT*WMQTCFG=username, *WMQTCFG:username,   OK AT*WMQTCFG=password, *WMQTCFG:password,   OK AT*WMQTCFG=port,8883 *WMQTCFG:port,8883   OK AT*WMQTCFG=selfsigned,1 *WMQTCFG:selfsigned,1   OK AT*WMQTCFG=servercertauth,0 *WMQTCFG:servercertauth,0   OK AT*WMQTCFG? *WMQTCFG:endpoint,ssl://a3uz5t2azg1xdz-ats.iot.ap-northeast-2.amazonaws.com *WMQTCFG:clientname,clientid-testid *WMQTCFG:port,8883 *WMQTCFG:keepalive,300 *WMQTCFG:cleansession,1 *WMQTCFG:username, *WMQTCFG:password, *WMQTCFG:cacerts,/data/cacerts-aws.crt *WMQTCFG:clientcerts,/data/clientcerts-aws.crt *WMQTCFG:clientkey,/data/clientkey-aws.key *WMQTCFG:clientkeypasswd, *WMQTCFG:selfsigned,1 *WMQTCFG:servercertauth,0   OK AT*WMQTCON OK *WMQTCON:1 *WMQTCON:2   AT*WMQTPUB=testtopic/tx,\"{ \"Temp\" : 23 }\" OK *WMQTPUB:1 AT*WMQTPUB=testtopic/tx,\"{ \"Temp\" : 21 }\" OK *WMQTPUB:2 AT*WMQTPUB=testtopic/tx,\"{ \"Temp\" : 26 }\" OK *WMQTPUB:3   AT*WMQTDIS OK *WMQTDIS:0          ","categories": ["cat m1"],
        "tags": ["우리넷","외장형 모뎀","AWS"],
        "url": "/cat%20m1/woorinet-modem-aws-example/",
        "teaser": null
      },{
        "title": "Cat M1 Azure IoT 예제",
        "excerpt":"Cat M1 Azure IoT 예제   AT*WFPUSH=/data/cacerts-azure.crt,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkekNDQWwrZ0F3SUJBZ0lFQWdBQXVUQU5CZ2txaGtpRzl3MEJBUVVGQURCYU1Rc3dDUVlEVlFRR0V3SkoKUlRFU01CQUdBMVVFQ2hNSlFtRnNkR2x0YjNKbE1STXdFUVlEVlFRTEV3cERlV0psY2xSeWRYTjBNU0l3SUFZRApWUVFERXhsQ1lXeDBhVzF2Y21VZ1EzbGlaWEpVY25WemRDQlNiMjkwTUI0WERUQXdNRFV4TWpFNE5EWXdNRm9YCkRUSTFNRFV4TW..................................................................................DdFBoU056a0UxYWt4ZWhpL29DcjAKRXBuM28wV0M0enhlOVoyZXRjaWVmQzdJcEo1T0NCUkxiZjF3YldzYVk3MWs1aCszenZEeW55NjdHN2Z5VUloegprc0xpNHhhTm1qSUNxNDRZM2VrUUVlNStOYXVRcno0d2xIclFNejJuWlEvMS9JNmVZczlIUkN3Qlhic2R0VExTClI5STRMdEQrZ2R3eWFoNjE3anpWL09lQkhSbkRKRUxxWXptcAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t OK AT*WFPUSH=/data/clientcerts-azure.crt,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoekNDQW0rZ0F3SUJBZ0lQQW9oMUpPeUNvTjJsOFRhc3lnUDZNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1DVXgKSXpBaEJnTlZCQU1NR2xkSldtNWxkQ0JRYVdOdklGTjFZbTl5WkdsdVlYUmxJRU5CTUI0WERUSXlNRE15TkRJegpOVFl3TVZvWERUSXpNRE15TkRJek5UWXdNVm93WkRFTE1Ba0dBMVVFQmhNQ1FWVXhFekFSQmdOVkJBZ01DbE52CmJXVXRVM1JoZE.................................................................................. sU1phTGs2NnpRQ3JZTEI5RS83Q1cKQm9yMzNiRFphRGl0K1h2RmhBai9CN2Vua09BRDlRNU1RYnZwMmMxVHZ3YkhWTkI0MXFBbE5xL3NqMFg2UWxtNQpIdlE5b2d1dDJJdjVLZzRuNFRVSEZpMUU3NXBVSVNSdHNPSFNkdlRtb0VuSFhyY3Z5ck1MZVpzMWgyRllHWG1qCjIvL1ZiOTlIY0JnZ29UdE9IdUcrWnBUYXd1WlFsZVNHYzlxWjZnSlNZeXRhaENzbzBjQ2syejRpa1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t OK AT*WFPUSH=/data/clientkey-azure.key,LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFdrWGtzT2pycDZBRHUKb1BBaU5oalFRb1JIVVJmbU1QVXFLekRsWXlBcC96OVlVVjdpYVlydXZXdVB0dVl5V0owb0JFWTg4SjJSaWMrWApML0Z1WFF2eHlwNFBaK1ZNL1l3elZOWjM1clNGaVczeTFOWTFGRTFFZXd0amdSdkJVYkRqZlJ4TGgxdkUyenc3CldXeFpXZXVYY0..................................................................................4MUJFdEdGY0dKWQpIMFYweE5zVmRoSTF1UngyQU5YMGhCeDRyRUZabjFqMjA1QlRXT0dQbUxpekd1RmVySGl1dGlOMWVOQzh0TXpnCmp6YjBTTUpWT3dWL1B2ZUU0WU5JWnlpK3lXRjVHbUJiL1hSSmMrZlFVY0labEVEeElWWFNYRzNQZHpsODhUZkQKQ2tkeWdTQk1jNEROZzduQmY3ZFIwMWhBCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0= OK AT*WMQTCFG=cacerts,/data/cacerts-azure.crt *WMQTCFG:cacerts,/data/cacerts-azure.crt   OK AT*WMQTCFG=clientcerts,/data/clientcerts-azure.crt *WMQTCFG:clientcerts,/data/clientcerts-azure.crt   OK AT*WMQTCFG=clientkey,/data/clientkey-azure.key *WMQTCFG:clientkey,/data/clientkey-azure.key   OK AT*WMQTCFG=endpoint,ssl://WIZnetHub.azure-devices.net *WMQTCFG:endpoint,ssl://WIZnetHub.azure-devices.net   OK AT*WMQTCFG=clientname,wiznet_catm1_demo_01 *WMQTCFG:clientname,wiznet_catm1_demo_01   OK AT*WMQTCFG=username,WIZnetHub.azure-devices.net/wiznet_catm1_demo_01/?api-version=2018-06-30 *WMQTCFG:username,WIZnetHub.azure-devices.net/wiznet_catm1_demo_01/?api-version=2018-06-30   OK AT*WMQTCFG=password, *WMQTCFG:password,   OK AT*WMQTCFG=port,8883 *WMQTCFG:port,8883   OK AT*WMQTCFG=selfsigned,1 *WMQTCFG:selfsigned,1   OK AT*WMQTCFG=servercertauth,0 *WMQTCFG:servercertauth,0   OK AT*WMQTCFG? *WMQTCFG:endpoint,ssl://WIZnetHub.azure-devices.net *WMQTCFG:clientname,wiznet_catm1_demo_01 *WMQTCFG:port,8883 *WMQTCFG:keepalive,300 *WMQTCFG:cleansession,1 *WMQTCFG:username,WIZnetHub.azure-devices.net/wiznet_catm1_demo_01/?api-version=2018-06-30 *WMQTCFG:password, *WMQTCFG:cacerts,/data/cacerts-azure.crt *WMQTCFG:clientcerts,/data/clientcerts-azure.crt *WMQTCFG:clientkey,/data/clientkey-azure.key *WMQTCFG:clientkeypasswd, *WMQTCFG:selfsigned,1 *WMQTCFG:servercertauth,0   OK AT*WMQTCON OK *WMQTCON:1 *WMQTCON:2 AT*WMQTPUB=devices/wiznet_catm1_demo_01/messages/events/,\"{ \"Temp\" : 23 }\" OK *WMQTPUB:1 AT*WMQTPUB=devices/wiznet_catm1_demo_01/messages/events/,\"{ \"Temp\" : 21 }\" OK *WMQTPUB:2 AT*WMQTPUB=devices/wiznet_catm1_demo_01/messages/events/,\"{ \"Temp\" : 26 }\" OK *WMQTPUB:3 AT*WMQTDIS OK *WMQTDIS:0         ","categories": ["cat m1"],
        "tags": ["우리넷","외장형 모뎀","Azure"],
        "url": "/cat%20m1/woorinet-modem-azure-example/",
        "teaser": null
      },{
        "title": "Cat M1 AWS IoT 예제(BG96)",
        "excerpt":"Cat M1 AWS IoT 예제(BG96)   AWS IoT에서 사물 생성하기       디바이스 - 인증서 파일 저장하기   이제부터 Cat M1 모듈을 AWS IoT에 연결하는 과정을 설명합니다. 먼저, 이전 단계([2. AWS - 인증서 및 보안 정책 생성])에서 다운로드 받은 인증서 파일들을 Cat M1 모듈에 저장하는 과정입니다.   // Cat M1 모듈의 모든 파일 리스트 지우기 AT+QFDEL=\"*\"  OK  // Cat M1 모듈의 파일 리스트 확인하기 AT+QFLST  OK  // 루트 CA 인증서를 Cat M1 모듈 파일에 업로드 AT+QFUPL=\"AmazonRootCA1.pem\",1188,100 CONNECT +QFUPL: 1188,2d13  OK  // 사물에 대한 인증서를 Cat M1 모듈 파일에 업로드 AT+QFUPL=\"YourCertificate.pem.crt\",1220,100 CONNECT +QFUPL: 1220,7317  OK  // 프라이빗 키를 Cat M1 모듈 파일에 업로드 AT+QFUPL=\"YourPrivate.pem.key\",1675,100 CONNECT +QFUPL: 1675,372  OK   디바이스 - AWS IoT에 접속하기   이제, 디바이스가 AWS IoT에 접속하는 과정을 설명하도록 하겠습니다.   이전 단계(4. 디바이스 - 인증서 파일 저장하기)에서 Cat M1 모듈에 저장된 인증서 파일을 SSL 접속에 등록시키고, 여러가지 SSL 옵션을 설정합니다. 그리고, 엔드포인트 주소로 접속하여, AWS IoT에 접속합니다. 자세한 AT Command 명령어에 대한 설명은 해당 가이드 문서를 확인하시거나 매뉴얼을 확인하시기 바랍니다.   // SSL : 루트 CA 인증서 경로 설정 AT+QSSLCFG=\"cacert\",2,\"AmazonRootCA1.pem\"  OK  // SSL : 클라이언트 인증서 경로 설정 AT+QSSLCFG=\"clientcert\",2,\"YourCertificate.pem.crt\"  OK  // SSL : 클라이언트 프라이빗 키  경로 설정 AT+QSSLCFG=\"clientkey\",2,\"YourPrivate.pem.key\"  OK  // Manage server and client authentication if requested by the remote server AT+QSSLCFG=\"seclevel\",2,2  OK  // TLS 1.1 AT+QSSLCFG=\"sslversion\",2,4  OK  // Ciphersuite : TLS_RSA_WITH_AES_256_CBC_SHA AT+QSSLCFG=\"ciphersuite\",1,0x0035  OK  // Ignore validity check for certification AT+QSSLCFG=\"ignorelocaltime\",1 +QSSLCFG: \"ignorelocaltime\",1,1  OK  // MQTT 접속을 SSL로 설정 AT+QMTCFG=\"SSL\",0,1,2  OK  // 엔드 포인트 주소 설정 AT+QMTOPEN=0,\"a3uz5t2azg1xdz-ats.iot.ap-northeast-2.amazonaws.com\",8883  OK  +QMTOPEN: 0,0  // AWS IoT에 접속 AT+QMTCONN=0,\"WIZnet_IoTShield_CatM1\"  OK  +QMTCONN: 0,0,0   6. 디바이스 - 데이터 게시   이제, 디바이스에서 AWS IoT로 데이터를 보내보도록 하겠습니다.   디바이스 섀도우 서비스는 디바이스가 섀도우 상태 정보를 가져오거나 업데이트하거나 삭제할 수 있도록 예약된 MQTT 토픽를 사용합니다. 이러한 토픽의 이름은 $aws/things/thingName/shadow로 시작합니다. 디바이스 섀도우를 업데이트하려면 $aws/things/thingName/shadow/update 토픽으로 상태 문서를 게시합니다. 상태 문서는 JSON 문서 포맷으로 전송이 됩니다.   사물의 상태를 업데이트하려는 클라이언트는 다음과 같은 JSON 요청 상태 문서를 전송합니다.   {     \"state\" : {         \"desired\" : {             \"temp\" : \"20\"             \"led\" : \"on\",          }      } }   섀도우를 업데이트하는 디바이스는 다음과 같은 JSON 요청 상태 문서를 전송합니다.   {     \"state\" : {         \"reported\" : {             \"temp\" : \"25\"             \"led\" : \"off\",          }      } }   이제, 디바이스(Cat M1 모듈)가 AWS IoT에게 데이터를 보내보도록 하겠습니다.   // AWS IoT에 데이터 Publish하기 AT+QMTPUB=0,1,1,0,\"$aws/things/WIZnet_IoTShield_CatM1/shadow/update\" &gt; {\"state\":{\"reported\":{\"Temp\":\"29\",\"Color\":\"Red\"}}}  OK  +QMTPUB: 0,1,0   AWS IoT에서 해당 사물의 섀도우를 선택하면, 디바이스가 보낸 상태가 바로 적용되는 것을 확인하실 수 있습니다.      디바이스 - 데이터 구독   AWS IoT에서 디바이스에게 데이터를 전송하는 과정을 테스트 해보도록 하겠습니다. 먼저, 이번에는 디바이스가 $aws/things/WIZnet_IoTShield_CatM1/shadow/update/accepted를 구독하도록 하겠습니다.   // AWS IoT로부터 데이터 Subscribe하기 AT+QMTSUB=0,1,\"$aws/things/WIZnet_IoTShield_CatM1/shadow/update/accepted\",1  OK  +QMTSUB: 0,1,0,1   아래는 사물의 섀도우에서 “Color”를 “White”로 업데이트해 보도록 하겠습니다. 그럼, AWS IoT는 사물에게 업데이트된 정보를 전달하게 됩니다. 이를 위해서, 아래 화면에서 처럼, [섀도우], [편집]을 선택하여, 섀도우 상태를 아래와 같이 편집하고 [저장]을 선택합니다.      이 때, AWS IoT는 사물에게 이 데이터를 전달하게 되고, 디바이스에서는 아래와 같은 메시지를 받게 됩니다.  +QMTSUB: 0,1,0,1  +QMTRECV: 0,1,\"$aws/things/WIZnet_IoTShield_CatM1/shadow/update/accepted\",\"{\"state\":{\"reported\":{\"Temp\":\"29\",\"Color\":\"Red\"},\"desired\":{\"Color\":\"White\"}},\"metadata\":{\"reported\":{\"Temp\":{\"timestamp\":1553325144},\"Color\":{\"timestamp\":1553325144}},\"desired\":{\"Color\":{\"timestamp\":1553325144}}},\"version\":5,\"timestamp\":1553325144}\"   이 데이터를 가독성 있게 정렬하면 아래와 같습니다. 즉, AWS IoT 섀도우 화면에서 수정한 내용이 그대로 적용되는 것을 확인하실 수 있습니다.   {    \"state\":{     \"reported\":{       \"Temp\":\"29\",       \"Color\":\"Red\"     },     \"desired\":{       \"Color\":\"White\"     }   },   .......................   디바이스 - AWS IoT 접속 해제하기   만약 AWS IoT와 연결을 해제하려고 한다면, AT+QMTDISC 명령어를 사용하면 됩니다.   AT+QMTDISC=0 OK  +QMTDISC: 0,0   디바이스 - AT 명령어 전체 로그   아래 그림은 이번 AWS IoT 테스트에 사용된 디바이스의 전체 로그입니다.   AT+QFDEL=\"*\"  OK  AT+QFLST  OK  AT+QFUPL=\"AmazonRootCA1.pem\",1188,100 CONNECT +QFUPL: 1188,2d13  OK  AT+QFUPL=\"YourCertificate.pem.crt\",1220,100 CONNECT +QFUPL: 1220,7317  OK  AT+QFUPL=\"YourPrivate.pem.key\",1675,100 CONNECT +QFUPL: 1675,372  OK  AT+QSSLCFG=\"cacert\",2,\"AmazonRootCA1.pem\"  OK  AT+QSSLCFG=\"clientcert\",2,\"YourCertificate.pem.crt\"  OK  AT+QSSLCFG=\"clientkey\",2,\"YourPrivate.pem.key\"  OK  AT+QSSLCFG=\"seclevel\",2,2  OK  AT+QSSLCFG=\"sslversion\",2,4  OK  AT+QSSLCFG=\"ciphersuite\",1,0x0035  OK  AT+QSSLCFG=\"ignorelocaltime\",1 +QSSLCFG: \"ignorelocaltime\",1,1  OK  AT+QMTCFG=\"SSL\",0,1,2  OK  AT+QMTOPEN=0,\"a3uz5t2azg1xdz-ats.iot.ap-northeast-2.amazonaws.com\",8883  OK  +QMTOPEN: 0,0  AT+QMTCONN=0,\"WIZnet_IoTShield_CatM1\"  OK  +QMTCONN: 0,0,0  AT+QMTPUB=0,1,1,0,\"$aws/things/WIZnet_IoTShield_CatM1/shadow/update\" &gt; {\"state\":{\"reported\":{\"Temp\":\"29\",\"Color\":\"Red\"}}}  OK  +QMTPUB: 0,1,0  AT+QMTSUB=0,1,\"$aws/things/WIZnet_IoTShield_CatM1/shadow/update/accepted\",1  OK  +QMTSUB: 0,1,0,1  +QMTRECV: 0,1,\"$aws/things/WIZnet_IoTShield_CatM1/shadow/update/accepted\",\"{\"state\":{\"reported\":{\"Temp\":\"29\",\"Color\":\"Red\"},\"desired\":{\"Color\":\"White\"}},\"metadata\":{\"reported\":{\"Temp\":{\"timestamp\":1553325144},\"Color\":{\"timestamp\":1553325144}},\"desired\":{\"Color\":{\"timestamp\":1553325144}}},\"version\":5,\"timestamp\":1553325144}\"  AT+QMTDISC=0  OK  +QMTDISC: 0,0    ","categories": ["cat m1"],
        "tags": ["BG96","Quectel","AWS"],
        "url": "/cat%20m1/bg96-aws-example/",
        "teaser": null
      },{
        "title": "Cellular Network Attach Problem",
        "excerpt":"Cellular Network Attach 관련 AT Command   // Check SIM AT+CPIN?  // Check the signal strength. AT+CSQ  // Return the current state of the network registration : Attach/Detach AT+CREG?  // Check what network is the device on AT+COPS?  // Returns / scans the list of available operators. AT+COPS=?  // Attaches/detaches from the packet domain service. AT+CGATT=1/0  // Return the current state of packet domain service AT+CGATT? AT+CGATT=1/0  // PDP context parameter values for a PDP context identified by connection identifier; AT+CGDCONT? AT+CGDCONT=1,\"IPV4V6\"  // Activate/Deactivate a PDP context AT+CGACT?  // Get the assigned IP Address AT+CGPADDR=1   ","categories": ["cat m1"],
        "tags": ["LTE","Attach"],
        "url": "/cat%20m1/lte-attach-problem/",
        "teaser": null
      },{
        "title": "우리넷 Cat M1 모뎀 동작 동영상",
        "excerpt":"우리넷 Cat M1 모뎀 동작 동영상   YouTube https://www.youtube.com/watch?v=IIEaF2EVE3s   ","categories": ["cat m1"],
        "tags": ["외장형 모뎀","YouTube"],
        "url": "/cat%20m1/woorinet-modem-youtube/",
        "teaser": null
      },{
        "title": "IoT 셀룰러 모듈사 근황",
        "excerpt":"Evolution of cellular IoT modules since 2010       Telit acquiring Thales’ IoT portfolio     “Telit Cinterion is expected to put further pressure on the other Western module suppliers due to its broadened portfolio including security and eSIM/iSIM capabilities. &gt;The company is also spinning off its automotive IoT unit to focus on Industrial IoT. We expect Telit Cinterion to become the second biggest IoT module company outside &gt;China when the acquisition closes.”    Semtech acquiring Sierra Wireless     “In the digital supply chain age, end-to-end tracking demands multiple connectivity modes. Hence, the collaboration of cellular and LoRa technology is expected to be &gt;beneficial for end-to-end tracking. Cellular components had been missing from the Semtech portfolio prior to the acquisition. For example, if chipsets such as the Lora &gt;Edge LR1120 get embedded into a combined module with LTE-M or Cat 1, the resulting module covers almost all major wireless types of connectivity, including Sub-GHz &gt;LoRa, SATCOM S-band, 2.4 GHz Lora, and Cellular IoT.”       출처 : IoT Analytics    ","categories": ["cellular"],
        "tags": ["cellular module market"],
        "url": "/cellular/cellular-iot-module-market/",
        "teaser": null
      },{
        "title": "Cat 1 bis란",
        "excerpt":"LTE Cat 1 bis  Cat 1 bis의 bis는 라틴어 “두 번째로 또는 다시”라는 단어에서 유래한 것이고, 여기에서 알 수 있듯이 Cat 1의 기본 기능을 기반으로 한 기술임을 알 수 있다. Cat 1 bis는 한 개의 안테나로 Cat 1 수준의 서비스를 제공하는 것을 목표로 하고 있고, LTE-M이나 NB-IoT 처럼, 사업자가 네트워크 SW를 업그레이드할 필요 없이 기존의 스마트폰 LTE 네트워크를 그대로 사용할 수 있다는 점도 장점이다.   LTE Category       출처 : Monogoto                           Cat 1       Cat 1 bis       Cat M1       Cat M2       Cat NB1       Cat NB2                       3GPP Release       8       13       13       14       13       14                 Downlink Peak       10 Mbit/s       10 Mbit/s       1 Mbit/s       ~4 Mbit/s       26 Kbit/s       127 Kbit/s                 Uplink Peak       5 Mbit/s       5 Mbit/s       1 Mbit/s       ~7 Mbit/s       66 Kbit/s(multi-tone)       159 Kbit/s                 Range (MCL)       144 dB       141 dB       156 dB       156 dB       164 dB       164 dB                 Antennas       2       1       1       1       1       1                 Power Saving       eDRX, PSM       eDRX, PSM       eDRX, PSM       eDRX, PSM       eDRX, PSM       eDRX, PSM                 Duplex       Full       Full or Half       Full or Half       Full or Half       Half       Half           참고:  LTE Cat M1과 LTE Cat M2는 LTE-M 또는 eMTC(enhanced Machine Type Communication)로 구분되기도 합니다.   ","categories": ["cellular"],
        "tags": ["LTE Category, Cat 1 bis"],
        "url": "/cellular/LTE-category/",
        "teaser": null
      }]
